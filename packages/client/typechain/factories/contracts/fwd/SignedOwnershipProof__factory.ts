/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  SignedOwnershipProof,
  SignedOwnershipProofInterface,
} from "../../../contracts/fwd/SignedOwnershipProof";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
      {
        internalType: "address",
        name: "authorizer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nftChainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "createMessage",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ownershipSigner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "authorizer",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nftTokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nftChainId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "targetChainId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct IForwardRequest.ERC721ForwardRequest",
        name: "req",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "verifyOwnershipProof",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611012806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806312ce42fd146100465780635c0dfff6146100645780638190256414610094575b600080fd5b61004e6100c4565b60405161005b9190610671565b60405180910390f35b61007e60048036038101906100799190610702565b6100ed565b60405161008b91906107bd565b60405180910390f35b6100ae60048036038101906100a99190610a50565b610131565b6040516100bb9190610af6565b60405180910390f35b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000878787878787468860405160200161010e989796959493929190610b20565b604051602081830303815290604052805190602001209050979650505050505050565b600061025882426101429190610bcd565b10610182576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017990610c5e565b60405180910390fd5b60006101b46101af866000015187602001518861012001518960a001518a606001518b608001518a6100ed565b610221565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610200858361025190919063ffffffff16565b73ffffffffffffffffffffffffffffffffffffffff16149150509392505050565b6000816040516020016102349190610cf6565b604051602081830303815290604052805190602001209050919050565b60008060006102608585610278565b9150915061026d816102f9565b819250505092915050565b60008060418351036102b95760008060006020860151925060408601519150606086015160001a90506102ad878285856104c5565b945094505050506102f2565b60408351036102e95760008060208501519150604085015190506102de8683836105d1565b9350935050506102f2565b60006002915091505b9250929050565b6000600481111561030d5761030c610d1c565b5b8160048111156103205761031f610d1c565b5b03156104c2576001600481111561033a57610339610d1c565b5b81600481111561034d5761034c610d1c565b5b0361038d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038490610d97565b60405180910390fd5b600260048111156103a1576103a0610d1c565b5b8160048111156103b4576103b3610d1c565b5b036103f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103eb90610e03565b60405180910390fd5b6003600481111561040857610407610d1c565b5b81600481111561041b5761041a610d1c565b5b0361045b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045290610e95565b60405180910390fd5b60048081111561046e5761046d610d1c565b5b81600481111561048157610480610d1c565b5b036104c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b890610f27565b60405180910390fd5b5b50565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08360001c11156105005760006003915091506105c8565b601b8560ff16141580156105185750601c8560ff1614155b1561052a5760006004915091506105c8565b60006001878787876040516000815260200160405260405161054f9493929190610f63565b6020604051602081039080840390855afa158015610571573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036105bf576000600192509250506105c8565b80600092509250505b94509492505050565b60008060007f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60001b841690506000601b60ff8660001c901c6106149190610fa8565b9050610622878288856104c5565b935093505050935093915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061065b82610630565b9050919050565b61066b81610650565b82525050565b60006020820190506106866000830184610662565b92915050565b6000604051905090565b600080fd5b600080fd5b6106a981610650565b81146106b457600080fd5b50565b6000813590506106c6816106a0565b92915050565b6000819050919050565b6106df816106cc565b81146106ea57600080fd5b50565b6000813590506106fc816106d6565b92915050565b600080600080600080600060e0888a03121561072157610720610696565b5b600061072f8a828b016106b7565b97505060206107408a828b016106b7565b96505060406107518a828b016106ed565b95505060606107628a828b016106ed565b94505060806107738a828b016106b7565b93505060a06107848a828b016106ed565b92505060c06107958a828b016106ed565b91505092959891949750929550565b6000819050919050565b6107b7816107a4565b82525050565b60006020820190506107d260008301846107ae565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610826826107dd565b810181811067ffffffffffffffff82111715610845576108446107ee565b5b80604052505050565b600061085861068c565b9050610864828261081d565b919050565b600080fd5b600080fd5b600080fd5b600067ffffffffffffffff821115610893576108926107ee565b5b61089c826107dd565b9050602081019050919050565b82818337600083830152505050565b60006108cb6108c684610878565b61084e565b9050828152602081018484840111156108e7576108e6610873565b5b6108f28482856108a9565b509392505050565b600082601f83011261090f5761090e61086e565b5b813561091f8482602086016108b8565b91505092915050565b6000610160828403121561093f5761093e6107d8565b5b61094a61016061084e565b9050600061095a848285016106b7565b600083015250602061096e848285016106b7565b6020830152506040610982848285016106b7565b6040830152506060610996848285016106b7565b60608301525060806109aa848285016106ed565b60808301525060a06109be848285016106ed565b60a08301525060c06109d2848285016106ed565b60c08301525060e06109e6848285016106ed565b60e0830152506101006109fb848285016106ed565b61010083015250610120610a11848285016106ed565b6101208301525061014082013567ffffffffffffffff811115610a3757610a36610869565b5b610a43848285016108fa565b6101408301525092915050565b600080600060608486031215610a6957610a68610696565b5b600084013567ffffffffffffffff811115610a8757610a8661069b565b5b610a9386828701610928565b935050602084013567ffffffffffffffff811115610ab457610ab361069b565b5b610ac0868287016108fa565b9250506040610ad1868287016106ed565b9150509250925092565b60008115159050919050565b610af081610adb565b82525050565b6000602082019050610b0b6000830184610ae7565b92915050565b610b1a816106cc565b82525050565b600061010082019050610b36600083018b610662565b610b43602083018a610662565b610b506040830189610b11565b610b5d6060830188610b11565b610b6a6080830187610662565b610b7760a0830186610b11565b610b8460c0830185610b11565b610b9160e0830184610b11565b9998505050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610bd8826106cc565b9150610be3836106cc565b9250828203905081811115610bfb57610bfa610b9e565b5b92915050565b600082825260208201905092915050565b7f5374616c65000000000000000000000000000000000000000000000000000000600082015250565b6000610c48600583610c01565b9150610c5382610c12565b602082019050919050565b60006020820190508181036000830152610c7781610c3b565b9050919050565b600081905092915050565b7f19457468657265756d205369676e6564204d6573736167653a0a333200000000600082015250565b6000610cbf601c83610c7e565b9150610cca82610c89565b601c82019050919050565b6000819050919050565b610cf0610ceb826107a4565b610cd5565b82525050565b6000610d0182610cb2565b9150610d0d8284610cdf565b60208201915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f45434453413a20696e76616c6964207369676e61747572650000000000000000600082015250565b6000610d81601883610c01565b9150610d8c82610d4b565b602082019050919050565b60006020820190508181036000830152610db081610d74565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265206c656e67746800600082015250565b6000610ded601f83610c01565b9150610df882610db7565b602082019050919050565b60006020820190508181036000830152610e1c81610de0565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265202773272076616c60008201527f7565000000000000000000000000000000000000000000000000000000000000602082015250565b6000610e7f602283610c01565b9150610e8a82610e23565b604082019050919050565b60006020820190508181036000830152610eae81610e72565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265202776272076616c60008201527f7565000000000000000000000000000000000000000000000000000000000000602082015250565b6000610f11602283610c01565b9150610f1c82610eb5565b604082019050919050565b60006020820190508181036000830152610f4081610f04565b9050919050565b600060ff82169050919050565b610f5d81610f47565b82525050565b6000608082019050610f7860008301876107ae565b610f856020830186610f54565b610f9260408301856107ae565b610f9f60608301846107ae565b95945050505050565b6000610fb3826106cc565b9150610fbe836106cc565b9250828201905080821115610fd657610fd5610b9e565b5b9291505056fea2646970667358221220ee8e798e16deea3f2bcf454314e90e73e4b5fef28054788a92a9a2100311959b64736f6c63430008110033";

type SignedOwnershipProofConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SignedOwnershipProofConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SignedOwnershipProof__factory extends ContractFactory {
  constructor(...args: SignedOwnershipProofConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SignedOwnershipProof> {
    return super.deploy(overrides || {}) as Promise<SignedOwnershipProof>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SignedOwnershipProof {
    return super.attach(address) as SignedOwnershipProof;
  }
  override connect(signer: Signer): SignedOwnershipProof__factory {
    return super.connect(signer) as SignedOwnershipProof__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SignedOwnershipProofInterface {
    return new utils.Interface(_abi) as SignedOwnershipProofInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SignedOwnershipProof {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SignedOwnershipProof;
  }
}
