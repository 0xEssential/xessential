/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  DelegationRegistry,
  DelegationRegistryInterface,
} from "../../../contracts/test/DelegationRegistry";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "delegate",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "value",
        type: "bool",
      },
    ],
    name: "DelegateForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "delegate",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "contract_",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "value",
        type: "bool",
      },
    ],
    name: "DelegateForContract",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "delegate",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "contract_",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "value",
        type: "bool",
      },
    ],
    name: "DelegateForToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "vault",
        type: "address",
      },
    ],
    name: "RevokeAllDelegates",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "delegate",
        type: "address",
      },
    ],
    name: "RevokeDelegate",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegate",
        type: "address",
      },
      {
        internalType: "address",
        name: "vault",
        type: "address",
      },
    ],
    name: "checkDelegateForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegate",
        type: "address",
      },
      {
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        internalType: "address",
        name: "contract_",
        type: "address",
      },
    ],
    name: "checkDelegateForContract",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegate",
        type: "address",
      },
      {
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        internalType: "address",
        name: "contract_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "checkDelegateForToken",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegate",
        type: "address",
      },
      {
        internalType: "bool",
        name: "value",
        type: "bool",
      },
    ],
    name: "delegateForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegate",
        type: "address",
      },
      {
        internalType: "address",
        name: "contract_",
        type: "address",
      },
      {
        internalType: "bool",
        name: "value",
        type: "bool",
      },
    ],
    name: "delegateForContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegate",
        type: "address",
      },
      {
        internalType: "address",
        name: "contract_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "value",
        type: "bool",
      },
    ],
    name: "delegateForToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "vault",
        type: "address",
      },
    ],
    name: "getContractLevelDelegations",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "contract_",
            type: "address",
          },
          {
            internalType: "address",
            name: "delegate",
            type: "address",
          },
        ],
        internalType: "struct IDelegationRegistry.ContractDelegation[]",
        name: "contractDelegations",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "vault",
        type: "address",
      },
    ],
    name: "getDelegatesForAll",
    outputs: [
      {
        internalType: "address[]",
        name: "delegates",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        internalType: "address",
        name: "contract_",
        type: "address",
      },
    ],
    name: "getDelegatesForContract",
    outputs: [
      {
        internalType: "address[]",
        name: "delegates",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        internalType: "address",
        name: "contract_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getDelegatesForToken",
    outputs: [
      {
        internalType: "address[]",
        name: "delegates",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegate",
        type: "address",
      },
    ],
    name: "getDelegationsByDelegate",
    outputs: [
      {
        components: [
          {
            internalType: "enum IDelegationRegistry.DelegationType",
            name: "type_",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "vault",
            type: "address",
          },
          {
            internalType: "address",
            name: "delegate",
            type: "address",
          },
          {
            internalType: "address",
            name: "contract_",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
        ],
        internalType: "struct IDelegationRegistry.DelegationInfo[]",
        name: "info",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "vault",
        type: "address",
      },
    ],
    name: "getTokenLevelDelegations",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "contract_",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "delegate",
            type: "address",
          },
        ],
        internalType: "struct IDelegationRegistry.TokenDelegation[]",
        name: "tokenDelegations",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "revokeAllDelegates",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegate",
        type: "address",
      },
    ],
    name: "revokeDelegate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "vault",
        type: "address",
      },
    ],
    name: "revokeSelf",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506130fe806100206000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063685ee3e811610097578063aba69cf811610066578063aba69cf8146102cf578063ed4b878e146102ff578063f956cf941461032f578063fa352c001461035f57610100565b8063685ee3e8146102235780636f007d871461023f57806390c9a2d01461026f5780639c395bc21461029f57610100565b806336137872116100d357806336137872146101b157806349c95d29146101bb5780634fc69282146101d7578063537a5c3d1461020757610100565b806301ffc9a7146101055780631221156b146101355780631b61f67514610165578063219044b014610195575b600080fd5b61011f600480360381019061011a919061251d565b61037b565b60405161012c9190612565565b60405180910390f35b61014f600480360381019061014a9190612614565b6103f5565b60405161015c9190612725565b60405180910390f35b61017f600480360381019061017a9190612747565b61040d565b60405161018c9190612725565b60405180910390f35b6101af60048036038101906101aa9190612747565b610424565b005b6101b9610431565b005b6101d560048036038101906101d091906127a0565b6104bd565b005b6101f160048036038101906101ec9190612747565b610520565b6040516101fe9190612990565b60405180910390f35b610221600480360381019061021c91906129b2565b6108a5565b005b61023d60048036038101906102389190612a19565b61090b565b005b61025960048036038101906102549190612747565b61096a565b6040516102669190612b4a565b60405180910390f35b61028960048036038101906102849190612b6c565b610c1e565b6040516102969190612565565b60405180910390f35b6102b960048036038101906102b49190612bbf565b610dcd565b6040516102c69190612565565b60405180910390f35b6102e960048036038101906102e49190612bff565b610f63565b6040516102f69190612565565b60405180910390f35b61031960048036038101906103149190612bbf565b611116565b6040516103269190612725565b60405180910390f35b61034960048036038101906103449190612747565b61112e565b6040516103569190612d44565b60405180910390f35b61037960048036038101906103749190612747565b6113d4565b005b60007f0596d3d5000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103ee57506103ed826113e1565b5b9050919050565b6060610404846003858561144b565b90509392505050565b606061041d82600160008061144b565b9050919050565b61042e3382611947565b50565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815461047d90612d95565b919050819055507f32d74befd0b842e19694e3e3af46263e18bcce41352c8b600ff0002b49edf662336040516104b39190612dec565b60405180910390a1565b60006104ca338585611a14565b90506104dd848284600233886000611b14565b7f8d6b2f5255b8d815cc368855b2251146e003bf4e2fcccaec66145fff5c174b4f338585856040516105129493929190612e07565b60405180910390a150505050565b60606000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600061057082611f56565b905060008167ffffffffffffffff81111561058e5761058d612e4c565b5b6040519080825280602002602001820160405280156105c757816020015b6105b46123aa565b8152602001906001900390816105ac5790505b50935060005b828110156108895760006105ea8286611f6b90919063ffffffff16565b90506000600460008381526020019081526020016000206040518060a00160405290816000820160009054906101000a900460ff1660038111156106315761063061281f565b5b60038111156106435761064261281f565b5b81526020016000820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382015481525050905060008160200151905060008260000151905060006001600381111561077d5761077c61281f565b5b8260038111156107905761078f61281f565b5b036107af5761079f838c611f82565b85036107aa57600190505b610847565b600260038111156107c3576107c261281f565b5b8260038111156107d6576107d561281f565b5b036107fa576107ea838c8660600151611a14565b85036107f557600190505b610846565b60038081111561080d5761080c61281f565b5b8260038111156108205761081f61281f565b5b0361084557610839838c8660600151876080015161207f565b850361084457600190505b5b5b5b801561087957838a888061085a90612d95565b99508151811061086d5761086c612e7b565b5b60200260200101819052505b85600101955050505050506105cd565b508082111561089d57808203808551038552505b505050919050565b60006108b33386868661207f565b90506108c58582846003338989611b14565b7fe89c6ba1e8957285aed22618f52aa1dcb9d5bb64e1533d8b55136c72fcf5aa5d33868686866040516108fc959493929190612eb9565b60405180910390a15050505050565b60006109173384611f82565b905061092a838284600133600080611b14565b7f58781eab4a0743ab1c285a238be846a235f06cdb5b968030573a635e5f8c92fa33848460405161095d93929190612f0c565b60405180910390a1505050565b606060008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054815260200190815260200160002090506000610a0982611f56565b905060008167ffffffffffffffff811115610a2757610a26612e4c565b5b604051908082528060200260200182016040528015610a6057816020015b610a4d61242d565b815260200190600190039081610a455790505b50935060005b82811015610c02576000610a838286611f6b90919063ffffffff16565b90506000600460008381526020019081526020016000209050600380811115610aaf57610aae61281f565b5b8160000160009054906101000a900460ff166003811115610ad357610ad261281f565b5b03610bf557610b30888260010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168360020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846003015461207f565b8203610bf45760405180606001604052808260020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001826003015481526020018260010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250878580610bd590612d95565b965081518110610be857610be7612e7b565b5b60200260200101819052505b5b8260010192505050610a66565b5080821115610c1657808203808551038552505b505050919050565b600080848484600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600260008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054604051602001610cf5959493929190612f43565b604051602081830303815290604052805190602001209050610dad816000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054815260200190815260200160002061218290919063ffffffff16565b610dc057610dbb8585610dcd565b610dc3565b60015b9150509392505050565b6000808383600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054604051602001610ea29493929190612f96565b604051602081830303815290604052805190602001209050610f5a816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054815260200190815260200160002061218290919063ffffffff16565b91505092915050565b60008085858585600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205460405160200161103c96959493929190612fdb565b6040516020818303038152906040528051906020012090506110f4816000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054815260200190815260200160002061218290919063ffffffff16565b61110857611103868686610c1e565b61110b565b60015b915050949350505050565b606061112683600284600061144b565b905092915050565b606060008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548152602001908152602001600020905060006111cd82611f56565b905060008167ffffffffffffffff8111156111eb576111ea612e4c565b5b60405190808252806020026020018201604052801561122457816020015b61121161247a565b8152602001906001900390816112095790505b50935060005b828110156113b85760006112478286611f6b90919063ffffffff16565b90506000600460008381526020019081526020016000209050600260038111156112745761127361281f565b5b8160000160009054906101000a900460ff1660038111156112985761129761281f565b5b036113ab576112f0888260010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168360020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611a14565b82036113aa5760405180604001604052808260020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018260010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525087858061138b90612d95565b96508151811061139e5761139d612e7b565b5b60200260200101819052505b5b826001019250505061122a565b50808211156113cc57808203808551038552505b505050919050565b6113de8133611947565b50565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b606060008060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548152602001908152602001600020905060006114ea82611f56565b905060008167ffffffffffffffff81111561150857611507612e4c565b5b6040519080825280602002602001820160405280156115365781602001602082028036833780820191505090505b50935060005b828110156119285760006115598286611f6b90919063ffffffff16565b905060006004600083815260200190815260200160002090508960038111156115855761158461281f565b5b8160000160009054906101000a900460ff1660038111156115a9576115a861281f565b5b0361191b57600160038111156115c2576115c161281f565b5b8a60038111156115d5576115d461281f565b5b03611692576116088b8260010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611f82565b820361168d578060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1687858061163f90612d95565b96508151811061165257611651612e7b565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505b61191a565b600260038111156116a6576116a561281f565b5b8a60038111156116b9576116b861281f565b5b036117cf578873ffffffffffffffffffffffffffffffffffffffff168160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036117ca576117448b8260010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168b611a14565b82036117c9578060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1687858061177b90612d95565b96508151811061178e5761178d612e7b565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505b5b611919565b6003808111156117e2576117e161281f565b5b8a60038111156117f5576117f461281f565b5b03611918578873ffffffffffffffffffffffffffffffffffffffff168160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614801561185c5750878160030154145b15611917576118918b8260010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168b8b61207f565b8203611916578060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168785806118c890612d95565b9650815181106118db576118da612e7b565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505b5b5b5b5b5b826001019250505061153c565b508082111561193c57808203808551038552505b505050949350505050565b600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081546119d090612d95565b919050819055507f3e34a3ee53064fb79c0ee57448f03774a627a9270b0c41286efb7d8e32dcde938133604051611a0892919061303c565b60405180910390a15050565b600080600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508486858484604051602001611af3959493929190612f43565b60405160208183030381529060405280519060200120925050509392505050565b8415611db257611bba866000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054815260200190815260200160002061219990919063ffffffff16565b50611c0c86600360008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061219990919063ffffffff16565b506040518060a00160405280856003811115611c2b57611c2a61281f565b5b81526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff168152602001828152506004600088815260200190815260200160002060008201518160000160006101000a81548160ff02191690836003811115611cc657611cc561281f565b5b021790555060208201518160000160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160030155905050611f4d565b611e52866000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481526020019081526020016000206121b090919063ffffffff16565b50611ea486600360008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206121b090919063ffffffff16565b5060046000878152602001908152602001600020600080820160006101000a81549060ff02191690556000820160016101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600382016000905550505b50505050505050565b6000611f64826000016121c7565b9050919050565b6000611f7a83600001836121d8565b905092915050565b600080600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508385838360405160200161205f9493929190612f96565b604051602081830303815290604052805190602001209250505092915050565b600080600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905085878686858560405160200161216096959493929190612fdb565b6040516020818303038152906040528051906020012092505050949350505050565b60006121918360000183612203565b905092915050565b60006121a88360000183612226565b905092915050565b60006121bf8360000183612296565b905092915050565b600081600001805490509050919050565b60008260000182815481106121f0576121ef612e7b565b5b9060005260206000200154905092915050565b600080836001016000848152602001908152602001600020541415905092915050565b60006122328383612203565b61228b578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050612290565b600090505b92915050565b6000808360010160008481526020019081526020016000205490506000811461239e5760006001826122c89190613065565b90506000600186600001805490506122e09190613065565b905081811461234f57600086600001828154811061230157612300612e7b565b5b906000526020600020015490508087600001848154811061232557612324612e7b565b5b90600052602060002001819055508387600101600083815260200190815260200160002081905550505b8560000180548061236357612362613099565b5b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506123a4565b60009150505b92915050565b6040518060a00160405280600060038111156123c9576123c861281f565b5b8152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6124fa816124c5565b811461250557600080fd5b50565b600081359050612517816124f1565b92915050565b600060208284031215612533576125326124c0565b5b600061254184828501612508565b91505092915050565b60008115159050919050565b61255f8161254a565b82525050565b600060208201905061257a6000830184612556565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006125ab82612580565b9050919050565b6125bb816125a0565b81146125c657600080fd5b50565b6000813590506125d8816125b2565b92915050565b6000819050919050565b6125f1816125de565b81146125fc57600080fd5b50565b60008135905061260e816125e8565b92915050565b60008060006060848603121561262d5761262c6124c0565b5b600061263b868287016125c9565b935050602061264c868287016125c9565b925050604061265d868287016125ff565b9150509250925092565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61269c816125a0565b82525050565b60006126ae8383612693565b60208301905092915050565b6000602082019050919050565b60006126d282612667565b6126dc8185612672565b93506126e783612683565b8060005b838110156127185781516126ff88826126a2565b975061270a836126ba565b9250506001810190506126eb565b5085935050505092915050565b6000602082019050818103600083015261273f81846126c7565b905092915050565b60006020828403121561275d5761275c6124c0565b5b600061276b848285016125c9565b91505092915050565b61277d8161254a565b811461278857600080fd5b50565b60008135905061279a81612774565b92915050565b6000806000606084860312156127b9576127b86124c0565b5b60006127c7868287016125c9565b93505060206127d8868287016125c9565b92505060406127e98682870161278b565b9150509250925092565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6004811061285f5761285e61281f565b5b50565b60008190506128708261284e565b919050565b600061288082612862565b9050919050565b61289081612875565b82525050565b61289f816125de565b82525050565b60a0820160008201516128bb6000850182612887565b5060208201516128ce6020850182612693565b5060408201516128e16040850182612693565b5060608201516128f46060850182612693565b5060808201516129076080850182612896565b50505050565b600061291983836128a5565b60a08301905092915050565b6000602082019050919050565b600061293d826127f3565b61294781856127fe565b93506129528361280f565b8060005b8381101561298357815161296a888261290d565b975061297583612925565b925050600181019050612956565b5085935050505092915050565b600060208201905081810360008301526129aa8184612932565b905092915050565b600080600080608085870312156129cc576129cb6124c0565b5b60006129da878288016125c9565b94505060206129eb878288016125c9565b93505060406129fc878288016125ff565b9250506060612a0d8782880161278b565b91505092959194509250565b60008060408385031215612a3057612a2f6124c0565b5b6000612a3e858286016125c9565b9250506020612a4f8582860161278b565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b606082016000820151612a9b6000850182612693565b506020820151612aae6020850182612896565b506040820151612ac16040850182612693565b50505050565b6000612ad38383612a85565b60608301905092915050565b6000602082019050919050565b6000612af782612a59565b612b018185612a64565b9350612b0c83612a75565b8060005b83811015612b3d578151612b248882612ac7565b9750612b2f83612adf565b925050600181019050612b10565b5085935050505092915050565b60006020820190508181036000830152612b648184612aec565b905092915050565b600080600060608486031215612b8557612b846124c0565b5b6000612b93868287016125c9565b9350506020612ba4868287016125c9565b9250506040612bb5868287016125c9565b9150509250925092565b60008060408385031215612bd657612bd56124c0565b5b6000612be4858286016125c9565b9250506020612bf5858286016125c9565b9150509250929050565b60008060008060808587031215612c1957612c186124c0565b5b6000612c27878288016125c9565b9450506020612c38878288016125c9565b9350506040612c49878288016125c9565b9250506060612c5a878288016125ff565b91505092959194509250565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b604082016000820151612ca86000850182612693565b506020820151612cbb6020850182612693565b50505050565b6000612ccd8383612c92565b60408301905092915050565b6000602082019050919050565b6000612cf182612c66565b612cfb8185612c71565b9350612d0683612c82565b8060005b83811015612d37578151612d1e8882612cc1565b9750612d2983612cd9565b925050600181019050612d0a565b5085935050505092915050565b60006020820190508181036000830152612d5e8184612ce6565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612da0826125de565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612dd257612dd1612d66565b5b600182019050919050565b612de6816125a0565b82525050565b6000602082019050612e016000830184612ddd565b92915050565b6000608082019050612e1c6000830187612ddd565b612e296020830186612ddd565b612e366040830185612ddd565b612e436060830184612556565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b612eb3816125de565b82525050565b600060a082019050612ece6000830188612ddd565b612edb6020830187612ddd565b612ee86040830186612ddd565b612ef56060830185612eaa565b612f026080830184612556565b9695505050505050565b6000606082019050612f216000830186612ddd565b612f2e6020830185612ddd565b612f3b6040830184612556565b949350505050565b600060a082019050612f586000830188612ddd565b612f656020830187612ddd565b612f726040830186612ddd565b612f7f6060830185612eaa565b612f8c6080830184612eaa565b9695505050505050565b6000608082019050612fab6000830187612ddd565b612fb86020830186612ddd565b612fc56040830185612eaa565b612fd26060830184612eaa565b95945050505050565b600060c082019050612ff06000830189612ddd565b612ffd6020830188612ddd565b61300a6040830187612ddd565b6130176060830186612eaa565b6130246080830185612eaa565b61303160a0830184612eaa565b979650505050505050565b60006040820190506130516000830185612ddd565b61305e6020830184612ddd565b9392505050565b6000613070826125de565b915061307b836125de565b925082820390508181111561309357613092612d66565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea2646970667358221220e8837f1389257a761a70b13e100b30d35afccfb90fa07084900e6ca3d0ff490864736f6c63430008110033";

type DelegationRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DelegationRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DelegationRegistry__factory extends ContractFactory {
  constructor(...args: DelegationRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DelegationRegistry> {
    return super.deploy(overrides || {}) as Promise<DelegationRegistry>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DelegationRegistry {
    return super.attach(address) as DelegationRegistry;
  }
  override connect(signer: Signer): DelegationRegistry__factory {
    return super.connect(signer) as DelegationRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DelegationRegistryInterface {
    return new utils.Interface(_abi) as DelegationRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DelegationRegistry {
    return new Contract(address, _abi, signerOrProvider) as DelegationRegistry;
  }
}
